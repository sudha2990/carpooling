<%= form_for @ride, :html => { :class => 'form-horizontal' } do |f| %>
  <div class="form-group">
    <%= f.label :source %><br />
    <%= f.text_field :source, class: "form-control", :onblur => 'DrawMap()' %>
  </div>
  <%= error_span(@ride[:source]) %>
  <div class="form-group">
    <%= f.label :destination %><br />
    <%= f.text_field :destination, class: "form-control", :onblur => 'DrawMap()' %>
  </div>
  <%= error_span(@ride[:destination]) %>
  <div class="form-group">
    <%= f.label :cost %><br />
    <%= f.text_field :cost, class: "form-control" %>
  </div>
  <%= error_span(@ride[:cost]) %>
  <div class="form-group">
    <%= f.label :arrival_time %><br />
    <%= f.time_field :arrival_time, class: "form-control" %>
  </div>
  <%= error_span(@ride[:duration]) %>
  <div class="form-group">
    <%= f.label :departure_time %><br />
    <%= f.time_field :departure_time, class: "form-control" %>
  </div>
  <div class="form-group">
    <%= f.label :start_date %><br />
    <%= f.date_field :start_date, class: "form-control" %>
  </div>
  <%= error_span(@ride[:route]) %>
  <div class="form-group">
    <%= f.label :route %><br />
    <%= f.text_field :route, class: "form-control", :onblur => 'DrawMap()' %>
  </div>
  <div class="form-group">
    <%= f.label :travellers %><br />
    <%= f.text_field :travellers, class: "form-control"%>
  </div>
  <%= error_span(@ride[:travellers]) %>
  <div class="form-group">
    <%= f.label :seats %><br />
    <%= f.number_field :seats, class: "form-control"%>
  </div>
  <%= error_span(@ride[:travellers]) %>
  <div class="form-group">
    <%= f.button :submit, :class => ' btn btn-primary' %>
    <%= link_to t('.cancel', :default => t("helpers.links.cancel")),
                  rides_path, :class => 'btn btn-default' %>
  </div>
  <div style='width: 800px;'>
    <div id="map" style='width: 400px; height: 400px;'></div>
  </div>
<% end %>

<script>
$(window).load(function() {

  window.markersArray = [];
  window.latlon = [];
  window.flightPath = '';
  loadScript();
});

var map;

function initialize() {

  

function clearOverlays() {
  for (var i = 0; i < markersArray.length; i++ ) {
    markersArray[i].setMap(null);
  }
  markersArray.length = 0;
}
  
  
  

  var mapOptions = {
          center: new google.maps.LatLng(13.0827, 80.2707),
          zoom: 8,
          mapTypeId: google.maps.MapTypeId.RoadMap,
          panControl: true,
          scaleControl: false,
          streetViewControl: true,
          overviewMapControl: true
        };
        // initializing map
        map = new google.maps.Map(document.getElementById("map"),mapOptions);
        
   // geocoding 
      var geocoding  = new google.maps.Geocoder();
      $("#submit_button_geocoding").click(function(){

      var address = $("#search_box_geocoding").val();
        codeAddress(geocoding,address,false);

      });
      
      latlon = [
        {lat: 13.1827, lng: 80.4707},
      ];
      console.log(latlon);
      var flightPath = new google.maps.Polyline({
        path: latlon,
        geodesic: true,
        strokeColor: '#FF0000',
        strokeOpacity: 1.0,
        strokeWeight: 2
      });

      flightPath.setMap(map);

   
}

var info;

function codeAddress(geocoding,address,flag){
  var addLatLon = '';
  if(address.length > 0){
    geocoding.geocode({'address': address},function(results, status){
      if(status == google.maps.GeocoderStatus.OK){
        map.setCenter(results[0].geometry.location);
        var addLatLon = {
         lat : results[0].geometry.location.lat(),
         lng : results[0].geometry.location.lng()
        }
        latlon.push(addLatLon);
        var marker  =  new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
        });
        markersArray.push(marker);
        google.maps.event.addListener(marker,"click",function(){});
        }else{
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  }else{
    console.log("Search field can't be blank");
  }

}

function loadScript() {
  console.log("map loading ...");
  var script = document.createElement('script');
  script.type = 'text/javascript';
  //'https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyBJYFdplGeKUUEmGZ-vL4ydiSZ09Khsa_o&sensor=false&libraries=drawing'
  script.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp' +
    //'&v=3.14'+
    //'&key=AIzaSyBJYFdplGeKUUEmGZ-vL4ydiSZ09Khsa_o'+
    '&libraries=drawing'+
    '&callback=initialize';
  document.body.appendChild(script);
}
function DrawMap() {

  latlon = [
        {lat: 13.1827, lng: 80.4707},
      ];

  for (var i = 0; i < markersArray.length; i++ ) {
    markersArray[i].setMap(null);
  }
  markersArray.length = 0;
  var geocoding  = new google.maps.Geocoder();
  var source =  codeAddress(geocoding,$('#ride_source').val(),true);
  var midway = $('#ride_route').val();
  midway = midway.replace("{",'').replace("}",'').split(",");

  for (i = 0; i < midway.length; i++) { 
      console.log(midway[i]);
      codeAddress(geocoding,midway[i],true);
  }
  setTimeout(function() { var des = codeAddress(geocoding,$('#ride_destination').val(),true); }, 1000);

  if(flightPath){
    flightPath.setMap(null);
  }
  setTimeout(function() { drawing(); }, 3000);

}
function drawing() {
  latlon.shift();
  console.log(latlon);
      flightPath = new google.maps.Polyline({
        path: latlon,
        geodesic: true,
        strokeColor: '#FF0000',
        strokeOpacity: 1.0,
        strokeWeight: 2
      });

      flightPath.setMap(map);
}
</script>
